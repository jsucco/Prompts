{{template "header"}}
<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBIGrHz1xCr2fp_ND9GN3jYzRJA-5of6D0">
</script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="/public/javascript/select2/select2.min.js" type="text/javascript" ></script>
<link href="/public/css/select2/select2.min.css" rel="stylesheet" />
<style type="text/css">
    .gm-style-cc { display:none; }
    .dash-pad {
        display: block;
        overflow: hidden;
        background: white;
        box-shadow: 0px 2px 3px #7d9cbd;
        padding:10px;
        width:95%;
        padding-left: 30px;
        margin-top: 10px;
        margin-left: 15px;
    }
    #map {
        width:45%;
        height: 45%;
        max-height: 800px;
        min-height:300px;
        box-shadow: 0px 2px 3px #7d9cbd;
        margin: 15px;
    }
    #search_bar { width: 53%;}
    .columns-pad {
        width:97%;
        padding-left: 85px;
        margin-top: 35px;
        padding-right: 85px;
        margin-bottom: 75px;
    }

</style>
<body>
<div style="height:95%;" class="dash-pad">
        <div style="width:100%;">
            <select id="search_bar" type="text" ></select>
        </div>
        <div id="map"></div>
        <div class="columns-pad">
            <div id="chart" style="height:285px; width:90%;"></div>
        </div>
</div>


<script type="text/javascript">

    console.log("base", "{{.Base}}");
    var Base = "{{.Base}}";
    var myStyle = [
        {
            featureType: "administrative",
            elementType: "labels",
            stylers: [
                { visibility: "off" }
            ]
        },{
            featureType: "poi",
            elementType: "labels",
            stylers: [
                { visibility: "off" }
            ]
        },{
            featureType: "water",
            elementType: "labels",
            stylers: [
                { visibility: "off" }
            ]
        },{
            featureType: "road",
            elementType: "labels",
            stylers: [
                { visibility: "off" }
            ]
        }, {
            featureType: "administrative.province",
            elementType: "geometry.stroke",
            stylers: [
                { "visibility": "on" },
                { "weight": .75 },
                { "color": "#a2a5a5" }
            ]
        }, {
            featureType: "landscape",
            elementType: "geometry.fill",
            stylers: [
                { "visibility": "on" },
                { "color": "#d8d7de" }
            ]
        }, {
            featureType: "water",
            elementType: "geometry.fill",
            stylers: [
                { "visibility": "on" },
                { "color": "#eff1f5" }
            ]
        }
    ];

    var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    var locations2 = [
        {lat: -31.563910, lng: 147.154312},
        {lat: -33.718234, lng: 150.363181},
        {lat: -33.727111, lng: 150.371124},
        {lat: -33.848588, lng: 151.209834},
        {lat: -33.851702, lng: 151.216968},
        {lat: -34.671264, lng: 150.863657},
        {lat: -35.304724, lng: 148.662905},
        {lat: -36.817685, lng: 175.699196},
        {lat: -36.828611, lng: 175.790222},
        {lat: -37.750000, lng: 145.116667},
        {lat: -37.759859, lng: 145.128708},
        {lat: -37.765015, lng: 145.133858},
        {lat: -37.770104, lng: 145.143299},
        {lat: -37.773700, lng: 145.145187},
        {lat: -37.774785, lng: 145.137978},
        {lat: -37.819616, lng: 144.968119},
        {lat: -38.330766, lng: 144.695692},
        {lat: -39.927193, lng: 175.053218},
        {lat: -41.330162, lng: 174.865694},
        {lat: -42.734358, lng: 147.439506},
        {lat: -42.734358, lng: 147.501315},
        {lat: -42.735258, lng: 147.438000},
        {lat: -43.999792, lng: 170.463352},
        {lat: 47.675059, lng: -122.38619399999999}
    ]

    var gmap = {
        LoadMarkers: function(locations) {
            if (locations == null || locations.length == 0)
                return;

            if (gmap.MarkClusterer) {
                gmap.MarkClusterer.clearMarkers();
            }

            var markers = locations.map(function(location, i) {
                return new google.maps.Marker({
                    position: {lat: location.Lat, lng: location.Lng},
                    icon: 'public/img/icons8-New Moon-22.png'
                });
            });

            gmap.MarkClusterer = new MarkerClusterer(gmap.map, markers,
                {imagePath: 'public/img/m'});

        },
        MarkerClusterer: null,
        Init: function() {
            //var myOptions = { mapTypeId: google.maps.MapTypeId.ROADMAP };
            var myOptions = {
                mapTypeControlOptions: {
                    mapTypeIds: ['mystyle', google.maps.MapTypeId.ROADMAP, google.maps.MapTypeId.TERRAIN]
                },
                mapTypeId: 'mystyle',
                streetViewControl: false,
            };
            gmap.map = new google.maps.Map(document.getElementById("map"), myOptions);
            gmap.map.mapTypes.set('mystyle', new google.maps.StyledMapType(myStyle, { name: 'Assets' }));

            var geocoder = new google.maps.Geocoder();

            geocoder.geocode({'address': 'US'}, function (results, status) {
                var ne = results[0].geometry.viewport.getNorthEast();
                var sw = results[0].geometry.viewport.getSouthWest();

                gmap.map.fitBounds(results[0].geometry.viewport);
            });
        },
        map: null
    }

    gmap.Init();
    var asset_data = [{ id: 0, text: "ALL"}];
    var $search_bar = $("#search_bar").select2({
        multiple:true,
        data: asset_data,
        placeholder: "Select Asset"
    });

    $search_bar.on("change", function (e) {

        var text = e.target.textContent;
        console.log("change", e);
        search.call(text);
    });

    var search = {
      call: function(text) {
          $.ajax({
              url: '/search',
              type: 'post',
              success : function(data) {
                  console.log("data", data);
                  var json = JSON.parse(data);
                  console.log("search", json);
                  if (json)
                    gmap.LoadMarkers(json.Locations);
              },
              error: function(mess) {
                  console.log("search-error", mess);
              }
          });
      }
    };



</script>
<script type="text/javascript">
    google.charts.load('current', {packages: ['corechart', 'bar']});
    google.charts.setOnLoadCallback(drawAnnotations);

    function drawAnnotations() {
        var data = google.visualization.arrayToDataTable([
            ['Year', 'Maintenance', 'Operation', 'Capital Replacement'],
            ['2017', 1000, 400, 200],
            ['2018', 1170, 460, 250],
            ['2019', 660, 1120, 300],
            ['2020', 1030, 540, 350],
            ['2021', 1030, 540, 350]
        ]);

        var options = {
            chart: {
                title: 'Asset CapEx Analysis',
                subtitle: 'Capital Expense: 2017-2021',
                height: '270'
            }
        };

        var chart = new google.charts.Bar(document.getElementById('chart'));

        chart.draw(data, google.charts.Bar.convertOptions(options));
    }
</script>
</body>


{{template "footer"}}