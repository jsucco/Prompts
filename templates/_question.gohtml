
<input type="hidden" class="question_field_name" id="{{.DataId}}_DataId" name="{{.DataId}}_DataId" value="{{.DataId}}"/>
<input type="hidden" id="{{.DataId}}_Required" name="{{.DataId}}_Required" value="{{.Required}}" />
<div class="LeftSide">
    <div class="label_container">
        <label class="promptlabel" >{{.QuestionText}}</label>
    </div>
    {{if eq .ErrorFlag true}}
        <div id="{{.DataId}}-errorlabel" class="ErrorContainer">
        <label class="ErrorText">{{.ErrorMessage}}</label>
        </div>
    {{end}}
</div>
<div class="RightSide">
    {{$dataid := .DataId }}
    {{ with .UserResponse }}
        {{if eq .IsSelect true}}
            <input class="promptinput" name="{{$dataid}}" id="{{$dataid}}"
                   type="hidden" value="" />
            <input class="promptinput" name="{{$dataid}}_text" id="{{$dataid}}_text"
                   type="hidden" value="" />
            <select class="promptinput" name="{{$dataid}}_selector" id="{{$dataid}}_selector">
                <option value="" selected>SELECT OPTION</option>
                {{range .Options}}
                    <option value="{{.Value}}" {{if eq .Selected true}}selected{{end}}>{{.Text}}</option>
                {{end}}
            </select>
            <script type="text/javascript">
                $("#{{$dataid}}_selector").change(function(e) {
                    console.log(e);
                    var event = $.Event("keyup");

                    $("#{{$dataid}}_text").val($(this).find("option:selected").text());
                    $("#{{$dataid}}").val(e.currentTarget.value).trigger(event);
                    console.log($("#{{$dataid}}_text").val());

                });
            </script>
        {{else if eq .IsMultiLine true}}
            <textarea name="{{$dataid}}" id="{{$dataid}}" class="input_text_area" type="text">{{.Content}}</textarea>
        {{else if .IsSlider}}
            <div id="{{$dataid}}_widget" class="slider"></div>
            <p>
                <label style="color: #4b4949" for="{{$dataid}}_amount">{{.Slide.LabelText}}:</label>
                <input id="{{$dataid}}_amount" type="text" readonly style="border:0; font-weight: bold; background-color: transparent;">
            </p>
            {{if .Slide.AltLabelText}}
                <p>
                    <label style="color: #4b4949" for="{{$dataid}}">{{.Slide.AltLabelText}}:</label>
                    <input id="{{$dataid}}" type="text" readonly style="border:0; font-weight: bold; background-color: transparent;">
                </p>
            {{end}}
            <script type="text/javascript">
                $(function() {
                   $("#{{$dataid}}_widget").slider({
                       min: new Number({{.Slide.Min}}),
                       max: new Number({{.Slide.Max}}),
                       step: new Number({{.Slide.Interval}}),
                       slide: function(event, ui) {
                           if ($("#{{$dataid}}_amount").length)
                               $("#{{$dataid}}_amount").val(ui.value);

                           if ($("#{{.Slide.RefDataId}}").length) {
                               var ref_conv = new Number($("#{{.Slide.RefDataId}}").val());

                               var conv = new Number(ui.value / ref_conv);
                               $("#{{$dataid}}").val(conv.toFixed(2));
                           }
                       }
                   });
                });
            </script>
        {{else if .Default.AutoComplete}}
            <input class="promptinput" onfocus="geolocate()" name="{{$dataid}}" id="{{$dataid}}"
                   type="{{.Default.Type}}" value="" />
            <script type="text/javascript">
                var placeSearch, autocomplete;
                var componentForm = {
                    street_number: 'short_name',
                    route: 'long_name',
                    locality: 'long_name',
                    administrative_area_level_1: 'short_name',
                    country: 'long_name',
                    postal_code: 'short_name'
                };
                $(function() {
                    autocomplete = new google.maps.places.Autocomplete(
                        (
                            document.getElementById('{{$dataid}}')), {
                            types: ['geocode']
                        });
                    autocomplete.addListener('place_changed', fillInAddress);
                });
                function geolocate() {
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(function(position) {
                            var geolocation = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude
                            };
                            var circle = new google.maps.Circle({
                                center: geolocation,
                                radius: position.coords.accuracy
                            });
                            autocomplete.setBounds(circle.getBounds());
                        });
                    }
                }
                function fillInAddress() {
                    var place = autocomplete.getPlace();

                    for (var component in componentForm) {
                        document.getElementById(component).value = '';
                        document.getElementById(component).disabled = false;
                    }
                    for (var i = 0; i < place.address_components.length; i++) {
                        var addressType = place.address_components[i].types[0];
                        if (componentForm[addressType]) {
                            var val = place.address_components[i][componentForm[addressType]];
                            var e = $.Event("keyup");
                            $("#" + addressType).val(val).trigger(e);
                        }
                    }
                }
            </script>
        {{else if .Default.Type}}
            <input class="promptinput" name="{{$dataid}}" id="{{$dataid}}"
                   type="{{.Default.Type}}" value="{{.Content}}" />
        {{end}}
    {{end}}
    {{range .FollowupAddress}}
        <input type="hidden" value="{{.}}" class="{{$dataid}}_hidden_followups"/>
    {{end}}
    {{range .Permissions}}
        <input type="hidden" value="{{.}}" class="{{$dataid}}_hidden_permission"/>
    {{end}}
</div>

